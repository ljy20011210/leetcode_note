class Solution {
public:
    vector<vector<int>> result;
    vector<int> path;
    void backtracking(int startindex, vector<int>& nums){
        //收集结果
        result.push_back(path);
        //终止条件
        if (startindex>=nums.size())
            return;
        //单层搜索
        //for (集合元素)
        for (int i=startindex;i<nums.size();i++){
            //处理节点
            path.push_back(nums[i]);
            //递归函数
            backtracking(i+1,nums);
            //回溯
            path.pop_back();
        }
        
    }
    vector<vector<int>> subsets(vector<int>& nums) {
        result.clear();
        path.clear();
        backtracking(0,nums);
        return result;
    }
};
