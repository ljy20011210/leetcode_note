Initial Solution:
class Solution {
public:
    vector<vector<int>> minimumAbsDifference(vector<int>& arr) {
        vector<vector<int>> result;
        sort(arr.begin(),arr.end());
        int diff = abs(arr[1]-arr[0]);
        for (int i=2;i<arr.size();i++){
            if (abs(arr[i]-arr[i-1])<diff)
                diff = arr[i]-arr[i-1];
        }
        for (int j=1;j<arr.size();j++){
            if (abs(arr[j]-arr[j-1])==diff)
                result.push_back({min(arr[j-1],arr[j]),max(arr[j-1],arr[j])});
        }
        return result;
    }
};

Improved Version：（减少一个循环）
class Solution {
public:
    vector<vector<int>> minimumAbsDifference(vector<int>& arr) {
        vector<vector<int>> result;
        sort(arr.begin(),arr.end());
        int diff = INT_MAX;
        for (int i=1;i<arr.size();i++){
            if (arr[i]-arr[i-1]<diff){
                diff = arr[i]-arr[i-1];
                result.clear();
                result.push_back({arr[i-1],arr[i]});
            }
            else if (arr[i]-arr[i-1]==diff)
                result.push_back({arr[i-1],arr[i]});
        }
        return result;
    }
};
