Initial Solution:
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> result;
        for (int i=0;i<nums.size()-1;i++){
            for (int j=i+1;j<nums.size();j++){
                if (nums[i]+nums[j]==target){
                    result.push_back(i);
                    result.push_back(j);
                    break;
                }
            }
        }
        return result;
    }
};

Improved Version：（哈希表法）
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        std::unordered_map <int,int> map;
        for (int i=0;i<nums.size();i++){
            int s = target-nums[i];
            auto iter = map.find(s);
            if (iter!=map.end())
                return {iter->second,i};
            map.insert(pair<int,int>(nums[i],i));
        }
         return {};       
    }
};
