快慢指针；
class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode* fast = head;
        ListNode* slow = head;
        while (fast!=NULL && fast->next!=NULL){
            fast = fast->next->next;
            slow = slow->next;
            //相遇
            if (fast==slow)
                return true;
        }
        return false;
    }
};

找入口：
class Solution {
public:
    ListNode* hasCycle(ListNode *head) {
        ListNode* fast = head;
        ListNode* slow = head;
        while (fast!=NULL && fast->next!=NULL){
            fast = fast->next->next;
            slow = slow->next;
            //相遇
            if (fast==slow){
                ListNode* index1 = fast;
                ListNode* index2 = head;
                while (index1!=index2){
                    index1 = index1->next;
                    index2 = index2->next;
                }
                return index1;
            }
        }
        return NULL;
    }
};
