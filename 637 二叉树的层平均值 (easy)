/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        queue<TreeNode*> q;
        vector<double> result;
        if (root!=nullptr)
            q.push(root);
        else
            return {0};
        while (!q.empty()){
            int size = q.size();
            vector<long> vec;
            for (int i=0;i<size;i++){
                TreeNode* node = q.front();
                q.pop();
                vec.push_back(node->val);
                if (node->left)
                    q.push(node->left);
                if (node->right)
                    q.push(node->right);
            }
            long sum = 0;
            for (int j=0;j<vec.size();j++)
                sum += vec[j];
            result.push_back((double)sum/size);
        }
        return result;
    }
};
