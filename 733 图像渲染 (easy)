class Solution {
public:
    vector<vector<int>> v = vector<vector<int>>(52, vector<int>(52,0));
    void dfs(vector<vector<int>>& image, int x, int y, int color, int val){
        int row = image.size();
        int col = image[0].size();
        image[x][y] = color;
        v[x][y] = 1;
        if (x-1>=0 && image[x-1][y]==val && v[x-1][y]!=1)
            dfs(image,x-1,y,color,val);
        if (y-1>=0 && image[x][y-1]==val && v[x][y-1]!=1)
            dfs(image,x,y-1,color,val);
        if (x+1<row && image[x+1][y]==val && v[x+1][y]!=1)
            dfs(image,x+1,y,color,val);
        if (y+1<col && image[x][y+1]==val && v[x][y+1]!=1)
            dfs(image,x,y+1,color,val);
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int val = image[sr][sc];
        dfs(image,sr,sc,color,val);
        return image;
    }
};
