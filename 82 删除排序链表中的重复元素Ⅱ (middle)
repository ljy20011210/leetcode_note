/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if (head==nullptr)
            return head;
        ListNode* cur = head;
        ListNode* dummyhead = new ListNode(101);
        dummyhead->next = head;
        ListNode* prev = dummyhead;
        int val = prev->val;
        while (cur!=nullptr && cur->next!=nullptr){
            if (cur->val==cur->next->val){
                val = cur->val;
                while (cur!=nullptr && cur->val==val)
                    cur = cur->next;
                prev->next = cur;
            }
            else{
                prev = cur;
                cur = cur->next;
            }
        }
        return dummyhead->next;
    }
};
