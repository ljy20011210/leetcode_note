双指针法：
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* prev = nullptr;
        ListNode* cur = head;
        while (cur!=nullptr){
            ListNode* next = cur->next;
            cur->next = prev;
            prev =  cur;
            cur = next;
        }
        return prev;
    }
};

递归法：
class Solution {
public:
    ListNode* reverse(ListNode* prev, ListNode* cur){
        if (cur==nullptr)
            return prev;
        ListNode* tmp = cur->next;
        cur->next = prev;
        return reverse(tmp,cur);
    }
    ListNode* reverseList(ListNode* head) {
        return reverse(nullptr,head);
    }
};
